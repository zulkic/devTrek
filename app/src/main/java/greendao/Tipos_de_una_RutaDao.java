package greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import greendao.Tipos_de_una_Ruta;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table TIPOS_DE_UNA__RUTA.
*/
public class Tipos_de_una_RutaDao extends AbstractDao<Tipos_de_una_Ruta, Void> {

    public static final String TABLENAME = "TIPOS_DE_UNA__RUTA";

    /**
     * Properties of entity Tipos_de_una_Ruta.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id_ruta = new Property(0, Integer.class, "id_ruta", false, "ID_RUTA");
        public final static Property Id_tipo_ruta = new Property(1, Integer.class, "id_tipo_ruta", false, "ID_TIPO_RUTA");
    };


    public Tipos_de_una_RutaDao(DaoConfig config) {
        super(config);
    }
    
    public Tipos_de_una_RutaDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'TIPOS_DE_UNA__RUTA' (" + //
                "'ID_RUTA' INTEGER," + // 0: id_ruta
                "'ID_TIPO_RUTA' INTEGER);"); // 1: id_tipo_ruta
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'TIPOS_DE_UNA__RUTA'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, Tipos_de_una_Ruta entity) {
        stmt.clearBindings();
 
        Integer id_ruta = entity.getId_ruta();
        if (id_ruta != null) {
            stmt.bindLong(1, id_ruta);
        }
 
        Integer id_tipo_ruta = entity.getId_tipo_ruta();
        if (id_tipo_ruta != null) {
            stmt.bindLong(2, id_tipo_ruta);
        }
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public Tipos_de_una_Ruta readEntity(Cursor cursor, int offset) {
        Tipos_de_una_Ruta entity = new Tipos_de_una_Ruta( //
            cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0), // id_ruta
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1) // id_tipo_ruta
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, Tipos_de_una_Ruta entity, int offset) {
        entity.setId_ruta(cursor.isNull(offset + 0) ? null : cursor.getInt(offset + 0));
        entity.setId_tipo_ruta(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(Tipos_de_una_Ruta entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(Tipos_de_una_Ruta entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
